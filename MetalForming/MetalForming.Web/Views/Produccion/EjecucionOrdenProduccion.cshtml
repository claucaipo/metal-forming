@model OrdenProduccionModel

@{
    ViewBag.MenuActual = ConstantesWeb.Menu.Produccion;
    ViewBag.MenuItemActual = ConstantesWeb.MenuItem.EjecutarOrdenProduccion;
}

@Html.HiddenFor(p => p.Id)
@Html.HiddenFor(p => p.IdOrdenVenta)

<header class="header-crumb">
    <div class="container">
        <div class="row">
            <div class="col-xs-6">
                <a id="btnIniciar" href="javascript:;" class="btn btn-primary-line disabled"><i class="ion-play"></i> Iniciar</a>
                <a id="btnReanudar" href="javascript:;" class="btn btn-primary-line disabled"><i class="ion-refresh"></i> Reanudar</a>
                <a id="btnDetener" href="javascript:;" class="btn btn-primary-line disabled"><i class="ion-pause"></i> Detener</a>
                <a id="btnFinalizar" href="javascript:;" class="btn btn-primary-line disabled"><i class="ion-power"></i> Finalizar</a>
            </div>
            <div class="col-xs-6">
                <div class="text-right">
                    <strong class="text-white">Número OP:</strong> <strong>@Model.Numero</strong>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <strong class="text-white">Estado:</strong> <strong id="strEstado">@Model.Estado</strong>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                    <span id="spaTiempoContenedor" style="display: none;"><strong class="text-white">Tiempo:</strong> <strong><span id="crono" class="text-danger"></span></strong></span>
                </div>
            </div>
        </div>
    </div>
</header>

<main>
    <section>
        <div class="container">
            <div class="row">
                <div class="col-md-7">
                    <div class="well" style="max-height: 215px; min-height: 215px; margin-bottom: 5px; overflow: auto;">
                        <h4 class="text-primary">Proceso de producción</h4>
                        <div class="table-responsive">
                            <table id="tblSecuencia" class="table table-striped table-header table-rounded table-condensed">
                                <thead class="upper">
                                    <tr>
                                        <th class="hide">Id</th>
                                        <th style="width: 5%;">Sec.</th>
                                        <th style="width: 25%;">Máquina</th>
                                        <th style="width: 25%;">F.Inicio</th>
                                        <th style="width: 25%;">F.Fin</th>
                                        <th style="width: 20%;">Estado</th>
                                        <th class="hide">PLC</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var secuencia in Model.Secuencia)
                                    {
                                        <tr>
                                            <td class="tdIdMaquina hide">@secuencia.IdMaquina</td>
                                            <td>@secuencia.Secuencia</td>
                                            <td>@secuencia.DescripcionMaquina</td>
                                            <td>@secuencia.FechaInicio.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td>@secuencia.FechaFin.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td class="tdEstado">@secuencia.Estado</td>
                                            <td class="tdPLC hide">@secuencia.PLC</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="well" style="max-height: 215px; min-height: 215px; margin-bottom: 5px; overflow: auto;">
                        <h4 class="text-primary">Materiales reservados</h4>
                        <div class="table-responsive">
                            <table id="tblMateriales" class="table table-striped table-header table-rounded table-condensed">
                                <thead class="upper">
                                    <tr>
                                        <th class="hide"></th>
                                        <th></th>
                                        <th>Material</th>
                                        <th>Reservado</th>
                                        <th>Cantidad</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var material in Model.Materiales)
                                    {
                                        <tr>
                                            <td class="hide">@material.IdMaterial</td>
                                            <td class="tdCheckMaterial"><input type="checkbox" class="checkMaterial" /></td>
                                            <td>@material.DescripcionMaterial</td>
                                            <td>@material.Reservado</td>
                                            <td>@material.Comprar</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <br />

    <section>
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="well">
                        <div class="pull-left">
                            <h4 class="text-primary">Eventos</h4>
                        </div>
                        <div class="pull-right">
                            <div class="btn-group">
                                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Archivos de prueba
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a href="javascript:;" onclick="GenerarPrueba(1)">Generar siguiente ciclo</a></li>
                                    <li><a href="javascript:;" onclick="GenerarPrueba(2)">Generar error</a></li>
                                    <li><a href="javascript:;" onclick="GenerarPrueba(3)">Generar error corregido</a></li>
                                    <li><a href="javascript:;" onclick="GenerarPrueba(4)">Generar termino</a></li>
                                </ul>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="table-responsive">
                            <table id="tblEventos" class="table table-striped table-header table-rounded table-condensed">
                                <thead class="upper">
                                    <tr>
                                        <th class="hide">ID</th>
                                        <th style="width: 15%;">Dispositivo <br /> Usuario</th>
                                        <th style="width: 15%;">Evento</th>
                                        <th style="width: 25%;">Momento</th>
                                        <th style="width: 45%;">Resultado</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <br />
    <br />
</main>

<div id="modalReanudar" tabindex="-1" role="dialog" aria-hidden="true" class="modal fade" data-backdrop="static" style="z-index:100000;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title text-primary">Reanudar producción</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <label class="col-md-5 control-label">Comentario de reanudación:</label>
                                <div class="col-md-12">
                                    <textarea id="txtComentarioReanudar" class="form-control" rows="4"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a id="btnReanudarConfirmacion" href="javascript:;" class="btn btn-info"><i class="ion-checkmark-round"></i> Reanudar</a>
                <a href="javascript:;" class="btn btn-danger" data-dismiss="modal"><i class="ion-close-circled"></i> Cerrar</a>
            </div>
        </div>
    </div>
</div>

<div id="modalDetener" tabindex="-1" role="dialog" aria-hidden="true" class="modal fade" data-backdrop="static" style="z-index:100000;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title text-primary">Detener producción</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <label class="col-md-2 control-label">Comentario:</label>
                                <div class="col-md-12">
                                    <textarea id="txtComentarioDetener" class="form-control" rows="4"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a id="btnDetenerConfirmacion" href="javascript:;" class="btn btn-info"><i class="ion-checkmark-round"></i> Detener</a>
                <a href="javascript:;" class="btn btn-danger" data-dismiss="modal"><i class="ion-close-circled"></i> Cerrar</a>
            </div>
        </div>
    </div>
</div>

<div id="modalError" tabindex="-1" role="dialog" aria-hidden="true" class="modal fade" data-backdrop="static" style="z-index:100000;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title text-primary">Error</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <p id="modalErrorMensaje">
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a id="btnReanudarError" href="javascript:;" class="btn btn-info"><i class="ion-close-circled"></i> Reanudar</a>
                <a id="btnDetenerError" href="javascript:;" class="btn btn-danger"><i class="ion-checkmark-round"></i> Detener</a>
            </div>
        </div>
    </div>
</div>

@section scripts{

    <script type="text/javascript">

        var usuario = "USUARIO 01";
        var inicio = 0;
        var timeout = 0;

        var estadoConformado = '@Constantes.EstadoOrdenPoduccion.Conformado';
        var estadoDetenido = '@Constantes.EstadoOrdenPoduccion.Detenido';
        var estadoTerminado = '@Constantes.EstadoOrdenPoduccion.Terminado';

        var estadoMaquinaEnProceso = '@Constantes.EstadoProcesoMaquina.EnProceso';
        var estadoMaquinaDetenido = '@Constantes.EstadoProcesoMaquina.Detenido';
        var estadoMaquinaTerminado = '@Constantes.EstadoProcesoMaquina.Terminado';

        var maquinas = new Array();
        var numeroMaquinaActual = 0;
        var tiempoEspera = 10000; //milisegundos

        var urlCrearCarpetasArcivosPLC = '@Url.Action("CrearCarpetasArcivosPLC")';
        var urlIniciarProceso = '@Url.Action("IniciarProceso")';
        var urlLeerArchivo = '@Url.Action("LeerArchivo")';
        var urlActualizarEstado = '@Url.Action("ActualizarEstado")';
        var urlActualizarEstadoSecuencia = '@Url.Action("ActualizarEstadoSecuencia")';
        var urlGenerarArchivoPrueba = '@Url.Action("GenerarArchivoPrueba")';

        $(function () {
            $(".checkMaterial").on("change", function () {
                VerificarCheckBoxesMateriales();
            });

            $("#btnIniciar").on("click", function () {
                if ($(this).hasClass("disabled") == false) {
                    app.showConfirmDialog("Listo para iniciar la producción?", function () {
                        Iniciar();
                    });
                }
            });

            $("#btnReanudar").on("click", function () {
                if ($(this).hasClass("disabled") == false) {
                    $("#modalReanudar").modal("show");
                }
            });

            $("#btnReanudarConfirmacion").on("click", function () {
                Reanudar();
            });

            $("#btnReanudarError").on("click", function () {
                $("#modalReanudar").modal("show");
            });

            $("#btnDetener").on("click", function () {
                if ($(this).hasClass("disabled") == false) {
                    $("#modalDetener").modal("show");
                }
            });

            $("#btnDetenerConfirmacion").on("click", function () {
                Detener();
            });

            $("#btnDetenerError").on("click", function () {
                $("#modalDetener").modal("show");
            });

            $("#btnFinalizar").on("click", function () {
                if ($(this).hasClass("disabled") == false) {
                    app.showConfirmDialog("Listo para finalizar la producción?", function () {
                        Finalizar();
                    });
                }
            });
        });

        function VerificarCheckBoxesMateriales() {
            var result = true;
            $("#tblMateriales tbody tr").each(function (index, item) {
                var checkbox = $(this).find("td.tdCheckMaterial input").is(':checked');
                if (checkbox == false) {
                    result = false;
                }
            });
            if (result == true) {
                $("#btnIniciar").removeClass("disabled");
            } else {
                $("#btnIniciar").addClass("disabled");
            }
        }

        function Iniciar() {
            $("input[type='checkbox']").attr("disabled", "disabled");
            $("#btnIniciar").addClass("disabled");
            $("#btnFinalizar").removeClass("disabled");
            $("#spaTiempoContenedor").show();
            EmpezarDetener();
            AgregarEvento(usuario, "Inicio", "El usuario marco el inicio de la producción.");

            $.ajax({
                type: 'POST',
                url: urlCrearCarpetasArcivosPLC,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    if (response.Success === true) {

                        $("#strEstado").text(estadoConformado);

                        $('#tblSecuencia').find("tbody tr").each(function (index, row) {
                            var idMaquina = parseInt($.trim($(this).find("td.tdIdMaquina").text()));
                            var plc = $.trim($(this).find("td.tdPLC").text());
                            maquinas.push({
                                idMaquina: idMaquina,
                                plc: plc,
                                row: row,
                                model: null,
                                cantidadLecturas: 0
                            });
                        });

                        IniciarArchivo();

                    } else {
                        AgregarEvento(usuario, "Error", response.Message);
                        EmpezarDetener();
                    }
                },
                error: function (x, xh, xhr) {
                    console.error(xh);
                    AgregarEvento(usuario, "Error", "Ocurrió un error durante el inicio de la producción.");
                    EmpezarDetener();
                }
            });
        }

        function IniciarArchivo() {

            var maquina = maquinas[numeroMaquinaActual];

            $(maquina.row).find(".tdEstado").text(estadoMaquinaEnProceso);

            $.ajax({
                type: 'POST',
                url: urlIniciarProceso,
                data: JSON.stringify({ idMaquina: maquina.idMaquina }),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    if (response.Success === true) {

                        setTimeout(function () { LeerArchivo() }, tiempoEspera);

                    } else {
                        AgregarEvento(maquina.plc, "Error", response.Message);
                        EmpezarDetener();
                    }
                },
                error: function (x, xh, xhr) {
                    console.error(xh);
                    AgregarEvento(maquina.plc, "Error", "Ocurrió un error durante el inicio del PLC.");
                    EmpezarDetener();
                }
            });
        }

        function LeerArchivo() {

            var maquina = maquinas[numeroMaquinaActual];

            maquina.cantidadLecturas += 1;

            $.ajax({
                type: 'POST',
                url: urlLeerArchivo,
                data: JSON.stringify({ idMaquina: maquina.idMaquina }),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    if (response.Success === true) {

                        if (maquina.model == null) {

                            AgregarEvento(maquina.plc, "Inicio", "Inicio de proceso del PLC");

                            maquina.model = response.Data;

                        } else {

                            //Mostrar el numero de ciclo cuando cambia
                            if (maquina.model.NoCiclos != response.Data.NoCiclos) {
                                AgregarEvento(maquina.plc, "Proceso", "Se inicio el número de ciclo " + response.Data.NoCiclos);
                            }

                            //Verificando si existe un error
                            if (maquina.model.MotivosDeParada != response.Data.MotivosDeParada) {
                                var existe = false;
                                for (var i = 0; i < response.Data.Paradas.length; i++) {
                                    for (var k = 0; k < maquina.model.Paradas.length; k++) {
                                        if (response.Data.Paradas[i].Motivo == maquina.model.Paradas[k].Motivo) {
                                            existe = true;
                                        }
                                    }
                                    if (!existe) {
                                        AgregarEvento(maquina.plc, "Error", response.Data.Paradas[i].Mensaje);

                                        EmpezarDetener();

                                        $("#btnReanudar").removeClass("disabled");
                                        $("#btnDetener").removeClass("disabled");

                                        $("#modalErrorMensaje").text("La maquina PLC " + maquina.plc + " presento una parada " + response.Data.Paradas[i].Mensaje);
                                        $("#modalError").modal("show");

                                        maquina.model = response.Data;
                                        break;
                                    }
                                    existe = false;
                                }
                                if (!existe)
                                    return;
                            }

                            //Mostrar el tiempo de parada
                            if (maquina.model.TiempoParada != response.Data.TiempoParada) {
                                for (var i = 0; i < response.Data.Paradas.length; i++) {

                                    var existe = false;
                                    for (var k = 0; k < maquina.model.Paradas.length; k++) {
                                        if (response.Data.Paradas[i].Tiempo == maquina.model.Paradas[k].Tiempo) {
                                            existe = true;
                                        }
                                    }
                                    if (!existe) {
                                        AgregarEvento(maquina.plc, "Proceso", "Tiempo de parada: " + response.Data.Paradas[i].Tiempo + " seg.");
                                    }
                                }
                            }

                            //Mostrando el cambio por unidades producidas
                            if (maquina.model.UnidadesProducidas != response.Data.UnidadesProducidas) {
                                if (response.Data.UnidadesAProducidas != response.Data.UnidadesProducidas) {
                                    AgregarEvento(maquina.plc, "Proceso", response.Data.UnidadesProducidas + " unidades producidas hasta el momento.");
                                }
                            }

                            //Mostrando el cambio por unidades defectuosas 
                            if (maquina.model.UnidadesDefectuosas != response.Data.UnidadesDefectuosas) {
                                AgregarEvento(maquina.plc, "Proceso", response.Data.NoCiclos + " unidades defectuosas en total.");
                            }

                            maquina.model = response.Data;
                        }

                        if (maquina.model.UnidadesAProducidas != '' && maquina.model.UnidadesProducidas != '') {
                            if (maquina.model.UnidadesAProducidas == maquina.model.UnidadesProducidas) {

                                ActualizarEstadoSecuencia(maquina.idMaquina, estadoMaquinaTerminado);
                                $(maquina.row).find(".tdEstado").text(estadoMaquinaTerminado);

                                AgregarEvento(maquina.plc, "Termino", "Termino de proceso del PLC, ser producierón " + maquina.model.UnidadesProducidas + " unidades.");

                                if ((numeroMaquinaActual + 1) < maquinas.length) {

                                    numeroMaquinaActual += 1;
                                    IniciarArchivo();

                                } else {

                                    ActualizarEstado(estadoTerminado);
                                    $("#strEstado").text(estadoTerminado);

                                    AgregarEvento(usuario, "Termino", "El usuario marco el termino de la producción.");
                                }

                            } else {
                                setTimeout(function () { LeerArchivo() }, tiempoEspera);
                            }
                        } else {
                            setTimeout(function () { LeerArchivo() }, tiempoEspera);
                        }

                    } else {
                        AgregarEvento(maquina.plc, "Error", response.Message);
                        EmpezarDetener();
                    }
                },
                error: function (x, xh, xhr) {
                    console.error(xh);
                    AgregarEvento(maquina.plc, "Error", "Ocurrió un error durante la lectura del PLC.");
                    EmpezarDetener();
                }
            });
        }

        function ActualizarEstado(estado) {
            $.ajax({
                type: 'POST',
                url: urlActualizarEstado,
                data: JSON.stringify({ estado : estado }),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    if (response.Success === false) {
                        app.showMessageDialog(response.Message);
                    }
                },
                error: function (x, xh, xhr) {
                    console.error(xh);
                }
            });
        }

        function ActualizarEstadoSecuencia(idMaquina, estado) {
            $.ajax({
                type: 'POST',
                url: urlActualizarEstadoSecuencia,
                data: JSON.stringify({ idMaquina: idMaquina, estado: estado }),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    if (response.Success === false) {
                        app.showMessageDialog(response.Message);
                    }
                },
                error: function (x, xh, xhr) {
                    console.error(xh);
                }
            });
        }

        function Reanudar() {

            AgregarEvento(usuario, "Reanudado", $("#txtComentarioReanudar").text());

            var maquina = maquinas[numeroMaquinaActual];
            $(maquina.row).find(".tdEstado").text(estadoMaquinaEnProceso);

            LeerArchivo();
        }

        function Detener() {

            AgregarEvento(usuario, "Detenido", $("#txtComentarioDetener").text());

            var maquina = maquinas[numeroMaquinaActual];
            $(maquina.row).find(".tdEstado").text(estadoMaquinaEnProceso);

            ActualizarEstadoSecuencia(maquina.idMaquina, estadoMaquinaDetenido);
            ActualizarEstado(estadoDetenido);
        }

        function Finalizar() {
            EmpezarDetener();
            //Ajax -> urlFinalizar;
        }

        function AgregarEvento(dispositvo_usuario, evento, resultado) {
            var date = new Date();
            var momento = date.yyyymmddhhmmss();

            var tr = "<tr>";
            tr += "<td>" + dispositvo_usuario + "</td>";
            tr += "<td>" + evento + "</td>";
            tr += "<td>" + momento + "</td>";
            tr += "<td>" + resultado + "</td>";
            tr += "</tr>";
            $("#tblEventos tbody").prepend(tr);
        }

        function EmpezarDetener() {
            if (timeout == 0) {
                // Obtenemos el valor actual
                inicio = new Date().getTime();

                // iniciamos el proceso
                Funcionando();

            } else {
                // detemer el cronometro
                clearTimeout(timeout);
                timeout = 0;
            }
        }

        function Funcionando() {
            // obteneos la fecha actual
            var actual = new Date().getTime();

            // obtenemos la diferencia entre la fecha actual y la de inicio
            var diff = new Date(actual - inicio);

            // mostramos la diferencia entre la fecha actual y la inicial
            var result = LeadingZero(diff.getUTCHours()) + ":" + LeadingZero(diff.getUTCMinutes()) + ":" + LeadingZero(diff.getUTCSeconds());
            document.getElementById('crono').innerHTML = result;

            // Indicamos que se ejecute esta función nuevamente dentro de 1 segundo
            timeout = setTimeout("Funcionando()", 1000);
        }

        function LeadingZero(time) {
            // Coloca un 0 delante de un valor si es necesario
            return (time < 10) ? "0" + time : +time;
        }

        Date.prototype.yyyymmddhhmmss = function () {
            var yyyy = this.getFullYear();
            var mm = this.getMonth() < 9 ? "0" + (this.getMonth() + 1) : (this.getMonth() + 1); // getMonth() is zero-based
            var dd = this.getDate() < 10 ? "0" + this.getDate() : this.getDate();
            var hh = this.getHours() < 10 ? "0" + this.getHours() : this.getHours();
            var min = this.getMinutes() < 10 ? "0" + this.getMinutes() : this.getMinutes();
            var seg = this.getSeconds() < 10 ? "0" + this.getSeconds() : this.getSeconds();
            return "".concat(dd).concat("/").concat(mm).concat("/").concat(yyyy).concat(" ").concat(hh).concat(":").concat(min).concat(":").concat(seg);
        };

        function GenerarPrueba(numero) {
            var maquina = maquinas[numeroMaquinaActual];
            $.ajax({
                type: 'POST',
                url: urlGenerarArchivoPrueba,
                data: JSON.stringify({ idMaquina: maquina.idMaquina, numero: numero }),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    if (response.Success === false) {
                        app.showMessageDialog(response.Message);
                    }
                },
                error: function (x, xh, xhr) {
                    console.error(xh);
                }
            });
        }

    </script>
}
